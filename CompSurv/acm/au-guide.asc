AUTHOR'S GUIDE FOR ELECTRONIC SUBMITTAL OF ACM

JOURNAL ARTICLES ACCEPTED FOR PUBLICATION



USING LATEX AND BIBTEX



Overview of this Document, 1

1.  Preparing to Submit an Accepted Article Electronically, 1

     1.1   What to Provide, 1

     1.2   How to Submit Your Article, 2

     1.3   How to Prepare Text and Graphics, 3

     1.4   Getting Help, 4

2.  Getting Started, 4

      2.1  Using the ACM LATEX and BIBTEX Style Files, 4

      2.2  Beginning your LATEX Source File, 5

3.  The Structure of the Article, 6

      3.1  The Front Matter, 6

      3.2  The Body of the Article, 12

      3.3  Acknowledgements, 19

      3.4  Appendices, 20

      3.5  The Bibliography, 21





OVERVIEW OF THIS DOCUMENT

This document explains how to submit an ACM article manuscript electronically. Section 1 provides 

general instructions for electronic submittal. Section 2 gives a very general look at the use of the 

ACM LATEX and BIBTEX style files.  Section 3 discusses, in fairly thorough detail, the structure of 

the LATEX file for your article and, in much more general terms, the structure of BIBTEX file.



In addition to this guide, read the Information for Authors for each specific ACM journal, which 

outlines required content and explains peer review and publication procedures.  For detailed 

instructions on using LATEX, refer to the LATEX User's Guide and Reference Manual, by Leslie 

Lamport.



1. PREPARING TO SUBMIT AN ACCEPTED ARTICLE ELECTRONICALLY

1.1 What to Provide

After your article is accepted for an ACM journal, you can submit it for publication in electronic 

form. An electronic submittal must include both the following items (note that both electronic and 

printed materials are required):









Electronic materials:

  The LATEX input (.tex) file containing the complete article that incorporates all revisions requested 

by the journal editor.  

	-  Submit one copy of the LATEX source file.

	Note:  If you originally wrote your article as a `master-file' which input several 	

	.tex subfiles  (e.g., sections or chapters) during compilation, then each subfile should 	

	be concatenated with the master-file, in turn and in the proper sequence, to produce a 	

	single complete source file.  However,  do not concatenate graphics files into the master 	

	file.  See section 3.2.5 below for handling graphics files.



	-  Name the LATEX file with the first eight letters of the contact author's surname and 	

	the .tex extension:

	EXAMPLES:  smith.tex      murray.tex     anderson.tex



  The output of running your BIBTEX input (.bib) file, the .bbl file, should be  inserted into 	

	the master file immediately after the \bibliography{esub2acm} statement.  

	Note:  You should not send your .bib (bibliography database source) file.  To see 	how these 

	parts fit together, it may be instructive to compare the file sampdoc.tex (the author's final 

	working copy) with the file trovato.tex (the master source .tex file as submitted). 



  A graphics file for each figure. You will use the figure environment to indicate the position 	

	in the text of the LaTEX source file for each figure, and you must provide the graphics 	

	file for each such figure. Name the graphics files with up to six letters of the contact 	

	author's surname, followed by the two-digit figure number, and an extension indicating 	

	the file format:

	EXAMPLES: smith01.tif      anders12.eps



  An ASCII text file (named readme.1st) containing:

     -    Required. Names of all files submitted with descriptions of their contents

     -    Optional.  Information for ACM production staff (for example, "Files with the 	

	extension .tif are version 5".



Printed materials:

  The printed output of the .dvi file.

  A high-quality, full-page (8.5 x 11 inches) hard copy of each figure. At the bottom of each page, 

outside the image area, label the graphic with (1) the figure number, e.g. Fig. 1, and (2)  the name of 

the electronic file used to produce it, e.g. anders01.tif

  A completed ACM copyright form





1.2  How to Submit Your Article

Submit all materials to the Editor in Chief of the journal in which your article will appear.  Mail the 

printed materials and the files (on electronic media) to the Editor in Chief in one package.

Note: Submitted materials are not returned to the authors.

Diskette. Use one or more diskettes formatted with Microsoft MS-DOS or IBM PC-DOS. High-

density 3.5-inch diskettes are preferred, but 5.25-inch double-or high-density diskettes are acceptable. 

Mail diskettes in a sturdy container to prevent damage.



Label each diskette with the following information:

     Contact author name

     Diskette number (1 of 2, 2 of 3, etc.)

     Journal abbreviation and as much of the title as will fit.

EXAMPLES:  	Anderson

		1 of 1

		JACM

		The Cost of Conservative Synchronization...

1.3  How to Prepare Text and Graphics

Note:  The following guidelines supplement those in Information for Authors for each ACM journal.



Guidelines for Text

Sections 2 and 3 discuss in detail the preparation of the LATEX input file for the text of your article.  

Remember that you are submitting text primarily for input processing.  You should not focus on 

producing camera-ready copy.



Guidelines for Graphics

For each figure that accompanies your paper, ACM needs a separate high-quality print version (for 

scanning if necessary) as well as the electronic version itself. To ensure accurate, high-quality 

production of your graphics, prepare and submit them as follows.



Hard copy. Submit a high-resolution printed copy of each figure, on 8.5"x11" paper, one figure        

	per page.   Near the lower edge of each page (outside the area of the figure itself),

     	write the figure number and the name of the graphics file which produced it.



Hard copy size. Maximum height of image: 11", minimum height 6.5"; maximum width of 	

	image: 8.5", minimum width 5".  With respect to photographs, send positive prints 	

	from negatives or high-resolution printed versions of scanned photos. Do not submit 	

	any images to a screening process; ACM handles all necessary prepress operations.



Electronic Copy. Submit a separate file containing the electronic version of each figure. Name 

	each file with up to the first six letters of the contact author's surname, the two digit 

	figure number, and an extension indicating the particular file format.

	EXAMPLES:  smith05.tif     smith11.tif    anders3.eps



Rendered Electronic File.  Maximum height: 6.5"; maximum width: 5 ".



     File formats. Submit graphics in either of these file formats:

     Type                		Format

     Black-and-white line art 	TIFF Version 5.0 (.tif), EPS V1.2 or 2.0 (.eps)

     Grayscale/color art 	TIFF Version 5.0 (.tif), EPS V1.2 or 2.0 (.eps)

Compression. Compress files only if necessary; for example, when a file is too large to fit on a single 

diskette. Use either PKZIP or Stuffit for compression.



General. For all types of graphics.

     Boxes. Do not surround the image with a border or box.

     Fonts. For text within a graphic, use common fonts such as Helvetica, Univers, Times, Century 

Schoolbook, or Symbol (Adobe Type 1 or TrueType equivalents).



1.4  Getting Help

If you have questions about electronic submittal or need assistance, send an E-mail message to 

help@acm.org with e-submit in the Subject: line.



2.  GETTING STARTED

2.1  Using the ACM LATEX and BIBTEX Style Files

The balance of this document will focus on using LATEX and BIBTEX with the ACM style files to 

produce your article.  In general, it assumes you are familiar with LATEX and BIBTEX on your site.  

[For those who are not:  LATEX is available for a variety of computer systems.  While all versions are 

essentially the same -- an input file created on one will produce the same output on any of them -- 

how you actually run LATEX will vary from system to system.]



Obtaining the Style Files.  You can receive instructions on how to obtain the style file 

(esub2acm.sty) and the bibliographic style file (esub2acm.bst) and related information (including 

this document) either 

  by visiting ACM's home page at 

http://www.acm.org/pubs/submitting_accepted_articles/auth_rd.htm, or

  by sending an E-mail message to help@acm.org with getting macros in the Subject: line.  



You will probably want to put the style file in your LATEX directory so that LATEX can find it at run 

time.



The style file contains the commands which define the various structural parts of the document to 

approximate the look of an ACM journal article.  Keep in mind that these commands mark the 

important structural parts of your document and are not intended to be used with LATEX to create 

camera-ready copy .  The structural commands in the ACM style file, used in your LATEX source 

document, are used by the ACM publishing system to convert the document into Standard 

Generalized Markup Language (SGML) tags.  The SGML tags let the electronic publishing system 

recognize information types within the article to facilitate storage, retrieval, and tracking.  SGML 

documents are system-independent; they are readily exchanged among users of various computer 

platforms and applications.



Once you have the styles file and are ready to begin writing your article, write, revise, and prepare 

your article for submission as you usually do with LATEX, using information from,

   Author's Guide for Electronic Submittal of Journal Articles Using LATEX and BIBTEX (this 

document);

   The Information for Authors published in the specific journal to which your article has been 

accepted for publication; and

   LATEX  User's Guide and Reference Manual (Leslie Lamport)



Remember, you should use only the structural commands in the esub2acm.sty file, but you many use 

any of the typographical commands -- such as accented or non-English characters and the 

mathematical characters and structures -- from LATEX.



2.2 Beginning Your  LATEX  Source File

It is not necessary, but it is sensible, to begin your document with several comment lines showing the 

file name, your name, a brief revision history, and any other pertinent comments about the file.  Each 

line of a comment in a  LATEX document begins with a %; comments in the source document do not 

appear in the output.  



EXAMPLE

% sampdoc.tex

% sample ACM style document using LaTeX

% Author: G.K.M. Tobin

% Revisions:  2 April 1996

%             9 June 1996



The very first (non-commented) lines in your file must be

\documentstyle{esub2acm}

\begin{document}



This tells LATEX to add the ACM style file's structural commands to the suite of typographic 

commands already available, and to begin working in the ACM document environment.



The very last (non-commented) line in your file must be

\end{document}



All the rest of your LATEX document is "bracketed", as it were,  by these commands.



A word to the novice: if you have little previous experience with LATEX, you will probably find it 

very helpful and instructive to obtain the source files of the sample document (sampdoc.tex and 

sampdoc.bib), to run them through LATEX and BIBTEX, and to compare the source code with the 

printed output.



A word to the expert: If you have routinely used LATEX or TEX for a long time, you may be 

tempted to write your own improvements to the structural definitions in the esub2acm.sty file, or to 

use other commands to streamline typesetting.  In a word: Don't!  Remember, the purpose of the 

LATEX file is not to create camera-ready copy, but to follow guidelines for delineating the structure 

of the article for conversion to SGML; that conversion routine is intended for the structural 

commands in the esub2acm.sty style file, and may become deeply and irreparably confused by 

structural commands you create.



3.  THE STRUCTURE OF THE ARTICLE

Your can think of your article as having this general structure: the Front Matter (including title and 

author information); the Body of the Article (including text, citations, figures, tables and equations); 

Acknowledgements; Appendices and Bibliography.  



The Front Matter is rather rigid in its internal organization, requiring specific elements in a specific 

order.  The organization of the Body of the Article is determined to a great extent by the type of 

information you are communicating in your article.  Not only the internal organization but the 

inclusion of both the Acknowledgements and Appendices are entirely determined by the author.  The 

Bibliography section is produced automatically by BIBTEX, from the citations you insert in your 

article and the contents of the .bib file.



Each of these five general parts of the document is dealt with in detail below.



3.1  The Front Matter

As noted above, the internal organization of the front matter is rather rigid.  The following outline 

shows the basic organization of the front matter; an explanation of each element is given in 

subsections 3.1.1 through 3.1.11.  Unless noted as OPTIONAL, each element below is required, and in 

the order indicated.  (This same outline in repeated, with the actual LATEX command or environment 

in lieu of the description for each element given below, in section 3.1.11 of this document.)



  Author or authors

  Sponsoring Organization  (OPTIONAL)   MAY HAVE MULTIPLE OCCURRENCES.

  Abstract

  Categories and subject descriptors  MAY HAVE MULTIPLE OCCURRENCES.

  General terms

  Keywords and phrases

  "Bottom Stuff"

  Author info

	name(s) (OPTIONAL)

	address(es)

	affiliation (OPTIONAL)

	biography(ies)  (OPTIONAL)

  Copyright Statement

  Wrapping up the Front Matter







3.1.1 Title of the Article

The \title{} command takes one argument: the title of your article.  You may insert \\ (line 

breaks) to indicate desirable line breaks for the title; if you do not insert line breaks, LATEX may 

insert them in ways that you find unaesthetic.



You should enter the title in mixed upper and lower case. You may indicate emphasis with the \it 

command, and you may of course enter any required special characters with the appropriate LATEX 

command.



EXAMPLE

\title{A \LaTeX\ Document for Submission\\ to an ACM Journal}



\title{A Novel Application for B\'{e}zier Curves}



3.1.2  Author or Authors

The \author{} command takes one argument: your name and the name of any co-authors and your 

affiliation(s).    Be certain to note that you do not have multiple occurrences of \author surrounding 

each author and affiliation.  You should insert \\ (line breaks) between your name and your 

affiliation, and you may insert one for a desirable break if either line is too long to fit on a single line.  



You should enter the author's/authors' names and affiliation in  mixed upper and lower case. Use 

\and to separate authors where you want separation by the word "and" on a line by itself; use the 

word and to separate authors where there is no line break.  You may use any of LATEX's accented 

characters as required in an author or organization name.  You may put a tie accent {the tilde with no 

backslash) between an initial and a subsequent part of the name to improve spacing.



EXAMPLES

One author, one affiliation:  

\author{Maurice Herlihy\\Digital Equipment Corporation}



Two authors, one affiliation:  

\author{Saumya K. Debray \and Nai-Wei Lin\\The University of Arizona}



Several authors, each with different affiliation:

\author{S\o ren Asmussen\\Aalborg University,\\

 Peter W.~Glynn\\Stanford University

 \and

 Hermann Thorisson\\University of Iceland}



Several authors, some with common affiliations:

\author{Mic Bowman\\The Pennsylvania State University

 \and Saumya K.~Debray and Larry L.~Peterson\\The University of Arizona}









3.1.3  Sponsoring Organization

The \sponsor command takes a single argument, which consists of the name and address of the 

sponsoring organization.   Use a separate occurrence of \sponsor for each sponsoring organization; 

LATEX will add the necessary punctuation separating the organizations as needed.



 This element is optional.



EXAMPLE

\sponsor{Association for Computing Machinery, Inc.,

        1515 Broadway, New York, NY 10036, USA

        Tel: (212) 555-1212; Fax: (212) 555-2000}

% line breaks do not appear in output; for input clarity only



3.1.4  Abstract

The abstract of the article is put in the abstract environment.  Place the control sequence 

\begin{abstract} at the front of the abstract and \end{abstract} at the end.   Multiple 

paragraphs may be separated by a blank line.



3.1.5 Categories and Subject Descriptors

The command \category takes three required arguments (in curly brackets) and one optional 

argument (in square braces) .  They are, in order: \category{CR number }{category}{sub-

category}[optional subject descriptor]



You may have as many occurrences of the \category command as you have categories.



Note that this command handles quite a lot for you.  It adds the tagline "Categories and Subject 

Descriptors:", and puts each argument in the required type convention; viz., the category is in bold in 

square brackets, the optional subject descriptor is in italic separated from the sub-category by a dash.  

You should not indicate any type style changes.  All separating punctuation between elements is 

added automatically also; you need only put in any separating punctuation within any element.



EXAMPLES

Note: both are from the same document:

\category{D.2}{Software}{Software Engineering}

\category{D.2.8}{Software Engineering}{Metrics}[complexity measures, 

	performance measures]





3.1.6 General Terms

The command \terms{} takes a single argument: a list, separated by commas, of the general terms 

in order of most significant.  Use of the \terms command adds the tagline "General Terms:" on a 

new line at the beginning of the list for you.  By convention, you should capitalize the first letter of 

each word.



There is only one occurrence of the \terms command in any given article, not one occurrence for 

each term.

Do not break the terms with \\ (line break) if the line is too long; LATEX will handle line breaking.



EXAMPLE

\terms{Languages, Performance}





3.1.7 Keywords

The command \keyword{} takes a single argument: a list, separated by commas, of the additional 

key words and phrases in alphabetical order .  Use of the \keywords command adds the tagline 

"Additional Key Words and Phrases:" on a new line at the beginning of the list for you.  By 

convention,  you should capitalize only the first letter of the first word .  



There is only one occurrence of the \keywords command in any given article, not one occurrence 

for each keyword.



Do not break the list of keywords with \\ (line break) if the line is too long; LATEX will handle line 

breaking.



EXAMPLE

\keywords{Discrete event modeling, encapsulation, event-driven 

simulation, modularity, parallel discrete event simulation, process 

interaction}



3.1.8  The "Bottomstuff" Section 

This aptly-named bottomstuff environment contains the author information and legal boilerplate that 

appears at the bottom of the first page of each article.  Such material may include:  `work supported 

by' statements that do not fit as either sponsors or under acknowledgements; grant information; 

salient information about the article (early version previously appeared, etc.), and will include at least 

some author information and the `legal boilerplate' concerning copyright.



Begin all the material to appear at the bottom of the first page with:

\begin{bottomstuff} 



First, put any information regarding support or other information about the article; note that this may 

be entered without any commands.  You may separate paragraphs within the bottomstuff 

environment with a blankline.   Follow this by all desired author information in the authinfo 

environment (discussed in more detail in the next section) and then enter the \permission 

command, which sets up the legal statements.  Finally, conclude the material to appear at the bottom 

of the first page with:

\end{bottomstuff}



EXAMPLE

\begin{bottomstuff}

This work was partially supported by the CASE (Computer Applications and 

Software Engineering) Center at Syracuse University, Syracuse, New York.



An earlier version of this paper appeared in the {\it Proceedings of the 

ACM Symposium on User Interface Software and Technology}  (Nov.11-13, 

1991) pp. 175-183.



\begin{authinfo}

  (See section 3.1.9 for complete details on \authinfo)

\end{authinfo}

\permission

\end{bottomstuff} 



3.1.9 Author Information

The authinfo environment occurs within the bottomstuff environment.  Begin the material to

be contained within the authinfo environment with 

\begin{authinfo}



and conclude it with 

\end{authinfo}.



Unlike the bottomstuff environment, where untagged text could be entered free-form, the various 

bits of information entered within the authinfo environment should be tagged with one of the 

following, in this order:



\name{}   necessary for multiple authors

\address{}   necessary for multiple authors

\affiliation{}

\biography{}   optional



Note:  Phone and fax numbers do not appear in printed articles; they are for ACM's use in 

communicating with authors.



EXAMPLES

for a single author:

\begin{authinfo}

\address{1515 Broadway, New York, NY 10036}

\end{authinfo}



for multiple authors:

\begin{authinfo}

\name{Ben Trovato}

\affiliation{Institute for Clarity in Documentation}

\address{FAX: 1-800-555-1212}

\name{G.K.M. Tobin}

\address{P.O. Box 1221, Dublin, OH  43017-6221}

\end{authinfo}









3.1.10 Copyright Information

The final command within the bottomstuff environment is \permission.  The command 

\permission takes no argument, and simply tells LATEX to insert the ACM legal boilerplate 

statement concerning permission to copy articles.



3.1.11 Completing the Front Matter

You are now ready to put the final touches on the front matter, with a couple of "housekeeping" 

commands, \markboth and \maketitle.



The command \markboth handles the running headings which will appear at the top of each page of 

the article.  It takes two arguments; the first is the text of the header to appear on left-hand (even) 

pages, viz. the author or authors, and the second is the right-hand (odd) page header, viz. the full or 

(if necessary) truncated title.



EXAMPLE

\markboth{P. Dewan and R. Choudhary}{High-Level and Flexible Framework 

for Implementing Multiuser User Interfaces}



The final command in the front matter is the command \maketitle, which takes no argument.  It 

tells LATEX to take care of all the details of setting up the first page of a document, and the proper 

placement of all the elements therein.  



The following outline shows in order all elements that are to be entered in the Front Matter portion of 

your article.



\title{}

\author{}

\sponsor{}         % [OPTIONAL]  **May have multiple occurrences.**

\begin{abstract}

\end{abstract}

\category{}{}{}[]  % **May have multiple occurrences.**

\terms{}

\keywords{}

\begin{bottomstuff}

  \begin{authinfo}

    \name{} 	   % [OPTIONAL] **May have multiple occurrences.**

    \address{} 	   % **May have multiple occurrences.**

    \affiliation{} %[OPTIONAL] **May have multiple occurrences.**

    \biography{}   %[OPTIONAL] **May have multiple occurrences.**

  \end{authinfo}

\permission

\end{bottomstuff}



\markboth{}{}

\maketitle





3.2  The Body of the Article

The body of the article does not have the rigid organization of the front matter or bibliography.  The 

text of the body of the article is organized as you see fit to best communicate your ideas.  Type style 

changes and accents and symbols from languages other than English may be necessary for clarity and 

precision.  Moreover, the body of the article may contain  equations and other mathematical 

structures, as well as figures and tables.  The body of the article will also include citations to works 

referenced in the bibliography.



Each of these different aspects of the body of your article will be considered in turn below.  



3.2.1  Type Styles and "Special" Characters

As you probably know, LATEX has the ability to change type styles and to use accents and symbols 

from other languages.  Remember, that the type style changes that occur in distinguishing structural 

parts of the document are handled by the esub2acm.sty commands.  For instance, the larger, bolder 

type the title is in is provided automatically by placing the text of the title the argument to the 

\title command.  Nevertheless, you will likely need occasionally to denote non-structural text as 

italicized (use the \it command), as emboldened (use the \bf command) or as typewriter 

style (use \tt command).  Please take care with the position of the curly brackets when changing 

typefaces;  all text you wish to be in the "changed" typeface must be contained within the curly 

brackets.  



EXAMPLES

. . .since we would have to be in {\it both} of {\it B} and {\it C}. . . 



We also extend {\bf superstate} and {bf overlap} to sets . . .



. . .type {\tt help@acm.org} in the . . .



You may also require accented characters or foreign language characters.  These commands allow 

you to handle very small pieces of foreign text in an English document.  Note that Greek letters used 

in mathematics are handled in a slightly different way from these commands (see section 3.2.4).  Refer 

to the LATEX User's Guide & Reference Manual for a complete list of the commands available.



Remember that the commands for accented and foreign characters can be used in any section of your 

document where needed, not just in the body of the article.



3.2.2 Headings within Text

The text of your article probably has a hierarchical organization of major sections and various smaller 

sections.  The esub2acm.sty file has commands available to assist you in delineating this structure, by 

providing different type conventions for each level of heading and providing automatic numbering 

where desired.



The command \section is the highest hierarchical section heading.  It takes a single argument, the 

text of the heading for that section.  The heading should be entered in mixed upper and lower case, 

and no heading number should be given.  LATEX will  add the appropriate heading number of form 

digit., cause a line break to occur after the heading, and set the heading in the appropriate type style.  

Although sections are generally numbered in ACM journals, \section* may be used in lieu of 

\section to produce an unnumbered section-level heading.



The command \subsection is the next, or second highest, hierarchical section heading.  It takes a 

single argument, the text of the heading for that subsection.  The heading should be entered in mixed 

upper and lower case, and no heading number should be given.  LATEX will  add the appropriate 

heading number of form digit.digit, cause a line break to occur after the heading, and set the heading 

in the appropriate type style.  Although subsections are generally numbered in ACM journals, 

\subsection* may be used in lieu of \subsection to produce an unnumbered subsection-level 

heading.



The command \subsubsection is the third highest hierarchical section heading.  It takes a single 

argument, the text of the heading for that sub-subsection.  The heading should be entered in mixed 

upper and lower case, and no heading number should be given.  LATEX will  add the appropriate 

heading number of form digit.digit.digit and set the heading in the appropriate type style.  The 

command \subsubsection* may be used in lieu of \subsubsection to produce an unnumbered 

subsection-level heading.



The command \paragraph is the lowest hierarchical section heading.  It takes a single argument, 

the text of the heading for that portion of the article (paragraph is a bit of a misnomer, as more than 

one paragraph of text can occur below a \paragraph heading).  The heading should be entered in 

mixed upper and lower case, and no heading number should be given.  LATEX will add the 

appropriate heading number of form digit.digit.digit.digit and set the heading in the appropriate type 

style.  The command \paragraph* may be used in lieu of \paragraph to produce an unnumbered 

subsection-level heading.



By the way, there is no visual distinction between the output of the command \subsubsection* 

and that of \paragraph*; only the numbered versions are distinguishable.  The reader may decide 

whether that is a hint or a caveat.



EXAMPLE

\section{Conclusion}

	 text

\subsection{Experimental Results}

	text

\subsection{Analysis of Results}

	text

\subsubsection{Analytical Method}

	text

\subsubsection{Problems with Data}

	text

\paragraph*{The Dog Ate the Printout}

	text

\subsection{Author's Findings}

	text



3.2.3  Mathematical and Logical Structures

The esub2acm.sty file already provides you with  environments for math expressions and provides 

you with a means to add additional logical constructs.



The equation environment renders mathematical expressions within it in "display math style" (i.e. 

vertical space occurs before and after the equation(s), and it is/they are centered horizontally) and 

automatically adds the appropriate equation number in parentheses right justified and vertically 

centered.



EXAMPLE

\begin{equation}

    y = x^2 + x + 1

\end{equation}



The displaymath environment renders mathematical expressions within it in "display math style" (as 

described above) but does not number the equation.



EXAMPLE

\begin{displaymath}

    y = x^2 + x + 1

\end{displaymath}



The math  environment renders mathematical expressions within it in inline (i.e., no vertical space 

between text and equation) math style.  Surrounding dollar signs are a common and useful shortcut 

for the math environment.



EXAMPLE

We find that \begin{math} y = x^2 + x + 1\end{math} is. . .



We find that $y=x^2 + x + 1$ is. . .



The rules for all the complexities of math expressions that may be expressed within such 

environments are far beyond the scope of this paper.  Please refer to the LATEX User's Guide & 

Reference Manual for a complete list of mathematical structures and symbols.



In addition to the actual "math mode" environments, wherein math symbols and structures are the 

norm and text is the exception, you may also want environments in which the content is chiefly 

textual, but which contain logical constructs such as algorithms, answers, assertions and axioms (and 

that's just the A's!).  



One group of such constructs has the form of a theorem, i.e. the name of the construct appears in 

small caps, its appropriate number is appended, and the text is set in italics.  For each of these, use the 

command \newtheorem once, before the first use of the construct.  The command \newtheorem 

takes two arguments, the first the lower case name of the environment, and the second the capitalized 

tagline to appear before each occurrence of the construct.





EXAMPLE

\newtheorem{axiom}{Axiom}

\begin{axiom}Every nonempty set of real numbers that has an upper bound 

has a {\it least} upper bound.\end{axiom}



Note that the \newtheorem command occurs only once  for each different logical construct you 

specify.  Also remember that text is assumed as the contents of any of the environments created with 

the \newtheorem command; if you use a mathematical expression, you must stipulate the math 

environment you want.



Other logical constructs that have the same appearance, for which you will want to add an 

appropriate \newtheorem command when they occur in your document, are:

	Algorithm	Corollary	Proposition

	Assertion	Criterion	Reduction

	Axiom		Hypothesis	Sublemma

	Conjecture	Lemma	        Theorem



Another group of such constructs has the form of a definition or convention (among others), i.e., the 

name of the construct appears in italics, its appropriate number is appended, and the text is set in 

Roman.  For each of these, use the command \newdef once, before the first use of the construct.  

The command \newdef takes two  arguments, the first the lower case name of the environment, and 

the second the capitalized tagline to appear before each occurrence of the construct.



Please note: the first argument is the non-displayed name of the environment; you can name your 

environment anything you want, of course, but it makes most sense to simply call the environment by 

the same word that will appear in the tagline (the second argument).



EXAMPLE

\newdef{answer}{Answer}

\begin{answer}

\begin{displaymath}

{\bf a \cdot b} = (2)(1) + (1)(1) + (1)(-3) =2+1-3=0

\end{displaymath}

Since the dot product is 0, the two vectors must be perpendicular.  The 

angle between them is $\frac{1}{2}\pi$ radians.\end{answer}

% later in document, answer to another problem

\begin{answer}42\end{answer}



Note that the \newdef command occurs only once for each different logical construct you specify.  

Also remember that text is assumed as the contents of any of the environments created with the 

\newdef command; if you use a mathematical expression, you must stipulate the math environment 

you want.



Other logical constructs that have the same appearance, for which you will want to add an 

appropriate \newdef command when they occur in your document, are:





	Answer		Convention		Problem

	Application	Definition		Property

	Affirmation	Discussion		Subcase

	Assumption	Example			Step

	Case		Exercise		Technique

	Claim		Fact			Type

	Comment		Notation		Question

	Conclusion	Note			Remark

	Condition	Observation



One other environment is already provided by esub2acm.sty.  The proof environment precedes the 

text entered with the tagline Proof in the appropriate typestyle, is not numbered and concludes the 

text with an open square dingbat.



EXAMPLE

\begin{proof} If $x$ is in the range of $f$, then $f$ must take on the 

value $x$ at some number.  Since $f$ is one-to-one, there can be only 

one such number.  We call it $g(x)$. \end{proof}

	

3.2.4 Citations

Citations to articles or books listed in the Bibliography section of your article will occur throughout 

the text of your article.  You must create a .bib source file and use BIBTEX to automatically produce 

this bibliography; you simply need to insert the command \cite in the proper location in the text of 

the body of the article.  The command \cite has a single argument, the key for the item cited.  The 

key is a short reference you invent to uniquely identify each work; typically the key is the first author's 

surname and a word from the title, separated by a colon.  This unique identifying key is included with 

each item in the .bib file for your article.  



A citation may reference more than one work.



EXAMPLE

..with the second edition of {\it Fundamentals of Interactive Computer 

Graphics}, by Foley et al. \cite{foley:fundamentals}



Other systems use a spreadsheet model for accessing attributes of 

objects \cite{myers:graphical,wilde:spreadsheet}



These examples are from an article in {\it ACM Transactions on 

Information Systems} \cite{pausch:lessons}



More information on how the indentifier key must tie in to the .bib file, and on the .bib file itself, can 

be found below in Section 3.5.



3.2.5 Tables

The esub2acm.sty file already provides you with two environments for proper placement and 

formatting of tables with captions in your document.  Because tables cannot be split accross pages, 

and because half-empty pages are undesirable, the table environment allows tabular information to 

"float" to a convenient location, such as the start of the following page.  The commands 

\begin{table} and \end{table} should surround all material comprising the table, including 

the table caption.  This should be followed by the command \centering (which takes no argument) 

to center the tabular information horizontally on the page.  Then, use the command \caption with a 

single argument, the text of the caption, to correctly number and caption your table.  Next, you must 

use the tabular environment to control the formatting of the actual contents of the table; use the 

commands \begin{tabular} and \end{tabular}.



The niceties of formatting tabular material in rows and columns is beyond the scope of this document; 

you can find all the details in the LATEX user guide.  Note that mathematical symbols, non-English 

language symbols and/or changes in typestyle are permitted in the table and tabular environments; 

use the normal commands or environments.



EXAMPLE

\begin{table}

\centering

\caption{Frequency of Special Characters}

\begin{tabular}{|c|c|l|} \hline

Non-English or Math Characters&Frequency&Comments\\ \hline

\O & 1 in 1,000& Useful for Swedish names\\ \hline

$\pi$ & 1 in 5& Very common in math\\ \hline

\$ & 4 in 5 & Used in business\\ \hline

$\Psi^2_1$ & 1 in 40,000& Unexplained usage\\ \hline

\end{tabular}

\end{table}



You may use the table and tabular environments anywhere in the body of the article or the 

appendices, for every occurrence of table information.  Place the table environment and its contents 

just past the point where it is first mentioned; remember, this location will change to accommodate 

desirable page breaks.







3.2.6 Figures

The esub2acm.sty file already provides you with an environment for proper placement of figures with 

captions in your document.  Because figures cannot be split across pages, and because half-empty 

pages are undesirable, the figure environment allows graphics to "float" to a convenient location, 

such as the start of the following page.  The commands \begin{figure} and \end{figure} 

should surround the figure, including the figure caption.  This should be followed by the command 

\centering (which takes no argument) to center the graphic horizontally on the page.  



Encapsulated PostScript Because the encapsulated PostScript (.eps)  figure format, is supported by 

LATEX, you can use the command \centereps included in the esub2acm.sty file to reference an 

.eps figure in the body of the article.



The command \centereps takes three arguments.  The first is the width of the figure.   The second 

is the height of the figure.  The third is the name of the file containing the figure, including the 

extension and the x- and y-offsets (typically, the same as the width and height of the figure). 



EXAMPLE

\begin{figure}

\centereps(1.0in}(1.0in)(fly.eps x=1.0in y=1.0in}

\caption{A sample black and white graphic.}

\end{figure}



Tagged Image File format (.tif) Because the Tagged Image File  (.tif) figure format figure, is not 

supported by LATEX , you cannot preview or print it with LATEX.  You may convert the .tif format 

figure to either .eps or .bmp if you wish to reference the figure in the body of the article in order to 

preview or print it with LATEX  (assuming you have the proper driver).   Use the command 

\centereps as above if you have converted to .eps; or use the command \centerbmp (which 

takes precisely the same three arguments as \centereps) if you have converted to .bmp. Please 

remember to submit your (original) .TIF file(s) even though you converted them to .EPS for LaTeX.



EXAMPLE

\begin{figure}

\centerbmp(1.0in}(1.0in)(fly.bmp x=1.0in y=1.0in}

\caption{A sample black and white graphic (.tif converted to .bmp).}

\end{figure}



If you do not need to preview or print a .tif figure with LATEX, you can use  the command 

\centertif to simply indicate the relative position of each figure.  This command will leave the required 

amount of space in your printout, and will indicate the file name of the graphic, but will not display the graphic.  

The command \centertif takes precisely the same three arguments as \centereps. 



EXAMPLE

\begin{figure}

\centertif(1.0in}(1.0in)(fly.tif x=1.0in y=1.0in}

\caption{A sample black and white graphic (.tif format).}

\end{figure}



All three commands, \centereps, \centerbmp and \centertif are included in the 

esub2acm.sty file.  



Finally, use the command \caption with a single argument, the text of the caption, to correctly 

number and caption your figure. 



You may use the figure environment anywhere in the body of the article or the appendices, for every 

occurrence of figures.  Place the figure environment and its contents just past the point where it is 

first mentioned; remember, this location will change to accommodate desirable page breaks.







3.3  Acknowledgements

The Acknowledgements section of your document is optional; it is used, as the name suggests, to 

acknowledge contributions of individuals or organizations to the document or the research it 

discusses.  This section should immediately follow the end of the body of your document.  Use the 

commands \begin{acks} and \end{acks} to surround the text of your acknowledgements.  A 

new paragraph can be indicated by a blank line in the input file.



Note that vertical separation from the end of the body of the document and the heading 

"Acknowledgements" in the appropriate typestyle is automatically supplied by the acks environment.



EXAMPLE

\begin{acks}

We would like to thank Ben Trovato, for his many helpful comments, and 

his insightful perusal of our first draft.



We also want to thank the many referees of the previous versions of this 

paper for their extremely useful suggestions.

\end{acks}





3.4  Appendices

The Appendix/Appendices section of your document is optional.  The appendix or appendices should 

follow the Acknowledgements section (if there is one) or the end of the body of the document (if 

there are no Acknowledgements).  



The esub2acm.sty file provides the appendix environment for proper labelling and formatting of 

appendices.  Begin the material for all appendices with the command \appendix.  Each separate 

appendix  begins with a \section{} command, where the argument is the heading for that appendix 

(you may omit the argument to \section{} if you wish your appendix to have the default name, 

Appendix A, Appendix B, etc., but do not omit the \section{} command entirely!)  You should 

enter the text of the section heading in mixed upper and lower case, although the heading will be 

shown in all caps in the document.



Most of the rules for the body of the article apply to the appendix as well.  You may use typestyle 

changes (limited by the same caveats as above), mathematical constucts, tables, and figures.  

Remember that the hierarchical headings work, but not in the same way as within the body of the 

article:  \section{} is the heading for a new appendix, \subsection{} is a new appendix 

section heading, with an order indicator of the form Appendix LetterDigit; e.g. the first subsection in 

Appendix B is denoted B1.



EXAMPLE

\appendix

\section{An Example} % This is Appendix A

This appendix considers in detail the analysis of the ...

.

.

\section{More Examples} % This is Appendix B

This appendix contains several examples of programs...

\subsection{Towers of Hanoi}

\subsection{Quicksort}



Remember, only one occurrence of \appendix is permitted per document.



3.5  Bibliography



You will use the BibTeX facility to produce the bibliography for your article.  This will aid in the 

process of converting the article to SGML.  You must write a bibliography input (.bib) file, which 

must be run through LATEX and BIBTEX  to create a bibliography output (.bbl) files.   You must 

then incorporate this .bbl file into your .tex source file.



NOTE:  Remember, you should not include the .bib file in your submittal to ACM; you must insert 

the contents of the .bbl file in the .tex master file.



You need only two commands in your LaTeX file to produce the bibliography: 

\bibliographystyle and \bibliography.



The command \bibliographystyle takes a single argument, the name of the bibliography style 

(esub2acm.bst) file you will use to properly format your citations and the bibliography, in this case, 

the ACM transactions style.  The command \bibliographystyle should immediately follow 

the end of the body of the article or any acknowledgements or appendices.  The command 

\bibliography should immediately follow the command \bibliographystyle.  The 

command \bibliography takes a single argument, the name of the bibliography database file (the 

.bib file) for your article. 



EXAMPLE

\bibliographystyle{esub2acm}

\bibliography{sampdoc}

\end{document}



The .bib file is separate from the .tex file, and consists of entries for each item cited in your article.  

These entries must be arranged alphabetically according to author's or editor's names, or publishing 

organizations for items to which no names can be attached.  The complete rules for the construction 

of a proper bib file are beyond the scope of this document, but may be found in the LATEX User's 

Guide & Reference Manual.  



You will also need to consult your Local Guide for complete details on running BibTEX.  The main 

point to remember is that you must run: 

latex yourarticle[.tex]

bibtex yourarticle[.bib]

latex yourarticle[.tex]

latex yourarticle[.tex]

in order to completely resolve all references and produce a proper .bbl file



EXAMPLES OF BIB FILE ITEMS 

These items correspond to citations in Section 3.2.3.  Note identifier key.



@BOOK{foley:fundamentals,

	AUTHOR = "Foley, J. and ",

	TITLE = "Computer Graphics: Principles and Practice ",

	PUBLISHER = {Addison-Wesley Publishing Co.},

	ADDRESS = {Reading, MA},

	YEAR = "1990"	}



@INPROCEEDINGS{myers:graphical,

	AUTHOR = "B. Myers",

	TITLE = "Graphical Techniques in a spreadsheet for specifying user 

interfaces",

	BOOKTITLE = {Proceedings of ACM CHI'91 Conference on Human Factors 

in Computing Systems, (New Orleans, LA, Apr 27 - May 2, 1991)},

	PAGES = {243-250}

	YEAR = {1991}	}





@ARTICLE{pausch:lessons,

	AUTHOR = "Randy Pausch and Matthew Conway and Robert DeLine",

	TITLE = "Lessons Learned from SUIT, the Simple User Interface 

Toolkit",

	JOURNAL = {ACM Transactions on Information Systems},

	VOLUME = {10},

	NUMBER = {4},

	PAGES = {320-344},

	MONTH = {October},

	YEAR = {1992}	}



@INPROCEEDINGS{wilde:spreadsheet,

	AUTHOR = "Wilde, J. and Lewis, C.",

	TITLE = "Spreadsheet-based interactive graphics: from prototype to 

tool",

	BOOKTITLE = {Proceedings of ACM CHI'90 Conference on Human Factors 

in Computing Systems, (Seattle Washington, April 1-5, 1990)},

	PAGES = {153-159}

	YEAR = {1990}	}



Having run this .bib file as described above, you must then replace the line 

\bibliography{sampdoc} in your .tex  source file with the entire contents of the .bbl file, 

including the line \begin{thebibliography}{} before and the line 

\end{thebibliography} after the individual \bibitems.











EXAMPLES OF BBL FILE ITEMS 



\bibliographystyle{esub2acm}

%\bibliography{sampdoc}

% Note that the the command \bibliography{sampdoc} must be commented out

% or deleted in the final source tex file

\begin{thebibliography}{}



\bibitem[\protect\citeauthoryear{Bowman, Debray, and Peterson}{Bowman

  et~al.}{1993}]{bowman:reasoning}

\bibsc{Bowman, M., Debray, S.~K., and Peterson, L.~L.} \bibyear{1993}.

\newblock Reasoning about naming systems.

\newblock \bibemphic{ACM Trans. Program. Lang. Syst.}~\bibemph{15},~5

  (November), 795--825.



\bibitem[\protect\citeauthoryear{Braams}{Braams}{1991}]{braams:babel}

\bibsc{Braams, J.} \bibyear{1991}.

\newblock Babel, a multilingual style-option system for use with latex's

  standard document styles.

\newblock \bibemphic{TUGboat}~\bibemph{12},~2 (June), 291--301.



\bibitem[\protect\citeauthoryear{Herlihy}{Herlihy}{1993}]{herlihy:method

ology}

\bibsc{Herlihy, M.} \bibyear{1993}.

\newblock A methodology for implementing highly concurrent data objects.

\newblock \bibemphic{ACM Trans. Program. Lang. Syst.}~\bibemph{15},~5

  (November), 745--770.



\bibitem[\protect\citeauthoryear{Lamport}{Lamport}{1986}]{Lamport:LaTeX}

\bibsc{Lamport, L.} \bibyear{1986}.

\newblock \bibemph{LaTeX User's Guide and Document Reference Manual}.

\newblock Addison-Wesley Publishing Company, Reading, Massachusetts.



\bibitem[\protect\citeauthoryear{Salas and Hille}{Salas and

  Hille}{1978}]{salas:calculus}

\bibsc{Salas, S. and Hille, E.} \bibyear{1978}.

\newblock \bibemph{Calculus: One and Several Variable}.

\newblock John Wiley and Sons, New York.



\end{thebibliography}

  Nevertheless, the dvi file that results from running your article through LATEX will approximate the appearance of 

such an article and will provide you with a hardcopy working version .





ACM final version 12 December 1996		                                                                      22



